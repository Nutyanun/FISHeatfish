using Godot;                       
using System.Collections.Generic;  
using System.IO;                   
using System.Text.Json;            

public partial class PlayerLogin : Node
{
	// üëâ ‡πÄ‡∏û‡∏¥‡πà‡∏° Instance ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å class ‡∏≠‡∏∑‡πà‡∏ô
	public static PlayerLogin Instance { get; private set; }

	// path ‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏à‡∏£‡∏¥‡∏á (user data)
	private string SavePathUser = "user://players.json";

	// path ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô FileSystem ‡∏Ç‡∏≠‡∏á Editor
	private string SavePathRes = "res://SceneLogin/SaveUserLogin/players.json";

	// ‡∏Ñ‡∏•‡∏≤‡∏™‡∏¢‡πà‡∏≠‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô 1 ‡∏Ñ‡∏ô
	public class SaveData
	{
		public string PlayerName { get; set; } // ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
	}

	public override void _Ready()
	{
		// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Instance (Singleton)
		Instance = this;

		GD.Print("  User save path: " + ProjectSettings.GlobalizePath(SavePathUser));
	}

	// ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
	public List<SaveData> LoadPlayers()
	{
		string pathUser = ProjectSettings.GlobalizePath(SavePathUser);
		string pathRes  = ProjectSettings.GlobalizePath(SavePathRes);

		string json = "";

		if (File.Exists(pathUser))
		{
			GD.Print("Loading players from USER path: " + pathUser);
			json = File.ReadAllText(pathUser);
		}
		else if (File.Exists(pathRes))
		{
			GD.Print("Loading players from RES path: " + pathRes);
			json = File.ReadAllText(pathRes);
		}
		else
		{
			GD.Print("No players.json found, returning empty list");
			return new List<SaveData>();
		}

		return JsonSerializer.Deserialize<List<SaveData>>(json) ?? new List<SaveData>();
	}

	// ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
	public bool SavePlayer(string name)
	{
		var list = LoadPlayers();

		if (list.Exists(p => p.PlayerName == name))
		{
			GD.Print("Save failed, duplicate name: " + name);
			return false;
		}

		list.Add(new SaveData { PlayerName = name });

		string json = JsonSerializer.Serialize(list, new JsonSerializerOptions { WriteIndented = true });

		// Save ‡∏•‡∏á user://
		string pathUser = ProjectSettings.GlobalizePath(SavePathUser);
		File.WriteAllText(pathUser, json);
		GD.Print("Saved to USER path: " + pathUser);

		// Save ‡∏•‡∏á res:// (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô editor)
		string pathRes = ProjectSettings.GlobalizePath(SavePathRes);
		File.WriteAllText(pathRes, json);
		GD.Print("Saved to RES path: " + pathRes);

		return true;
	}
}
