using Godot;                     // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ namespace ‡∏Ç‡∏≠‡∏á Godot ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏Ñ‡∏•‡∏≤‡∏™ Node, Color ‡∏Ø‡∏•‡∏Ø
using System.Linq;               // ‡πÉ‡∏ä‡πâ LINQ (‡πÄ‡∏ä‡πà‡∏ô .OfType(), .OrderBy(), .Where()) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏•‡∏¥‡∏™‡∏ï‡πå

// ‡∏Ñ‡∏•‡∏≤‡∏™ CheckpointManager ‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î‡∏à‡∏≤‡∏Å Node2D ‚Üí ‡πÉ‡∏ä‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
public partial class CheckpointManager : Node2D
{
	public override void _Ready()   // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô _Ready() ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠ Node ‡∏ñ‡∏π‡∏Å‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏â‡∏≤‡∏Å
	{
		// ‚úÖ ‡πÇ‡∏´‡∏•‡∏î progress ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå players.json
		var login = PlayerLogin.Instance;         // ‡∏î‡∏∂‡∏á instance ‡∏Ç‡∏≠‡∏á PlayerLogin (autoload singleton)
		
		// ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
		if (login?.CurrentUser != null)
		{
			var name = login.CurrentUser.PlayerName;     // ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
			var doc = LeaderboardStore.LoadDoc();        // ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ JSON ‡∏à‡∏≤‡∏Å LeaderboardStore (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)

			// ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ key "players" ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
			if (doc.ContainsKey("players"))
			{
				var players = (Godot.Collections.Dictionary)doc["players"];  // ‡πÅ‡∏õ‡∏•‡∏á section "players" ‡πÄ‡∏õ‡πá‡∏ô Dictionary
				if (players.ContainsKey(name))                               // ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏´‡∏°
				{
					var p = (Godot.Collections.Dictionary)players[name];      // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Ñ‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡∏≠‡∏≠‡∏Å‡∏°‡∏≤
					
					// ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ key "current_level" ‚Üí ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡πÄ‡∏Ñ‡∏¢‡∏ú‡πà‡∏≤‡∏ô‡∏ñ‡∏∂‡∏á‡∏î‡πà‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß
					if (p.ContainsKey("current_level"))
						GameProgress.CurrentLevelIndex = (int)(long)p["current_level"];  // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ (long ‚Üí int) ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô GameProgress
				}
			}
		}

		GameProgress.Load();        // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå save ‡πÄ‡∏ä‡πà‡∏ô user://save.dat)
		UpdateLevelVisual();        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï ‚Äú‡∏™‡∏µ‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‚Äù ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏î‡πà‡∏≤‡∏ô
	}

	// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡∏≠‡∏á‡∏î‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÄ‡∏ä‡πà‡∏ô ‡∏™‡∏µ‡πÅ‡∏î‡∏á=‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß, ‡∏Ç‡∏≤‡∏ß=‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô, ‡πÄ‡∏ó‡∏≤=‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏∂‡∏á
	private void UpdateLevelVisual()
	{
		// ‡∏î‡∏∂‡∏á‡∏•‡∏π‡∏Å Node ‡∏Ç‡∏≠‡∏á CheckpointManager ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó Level
		// ‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡πâ‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ ‡πÄ‡∏ä‡πà‡∏ô Level1, Level2, Level3, ...
		var Levels = GetChildren()                                  // ‡∏î‡∏∂‡∏á Node ‡∏•‡∏π‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
			.OfType<Level>()                                        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Node ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏•‡∏≤‡∏™ Level
			.OrderBy(m => ExtractNumber(m.Name.ToString()))          // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡πâ‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ (‡πÄ‡∏ä‡πà‡∏ô "Level3" ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏≤ 3)
			.ToList();                                               // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô List ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô

		// ‡∏ß‡∏ô‡∏ã‡πâ‡∏≥‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏∏‡∏Å‡∏î‡πà‡∏≤‡∏ô‡πÉ‡∏ô‡∏•‡∏¥‡∏™‡∏ï‡πå
		for (int idx = 0; idx < Levels.Count; idx++)
		{
			var script = Levels[idx];          // ‡∏î‡∏∂‡∏á Level ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡∏•‡∏¥‡∏™‡∏ï‡πå (‡πÄ‡∏ä‡πà‡∏ô Level1, Level2, ...)

			// üî¥ ‡∏ñ‡πâ‡∏≤‡∏î‡πà‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà ‚Äú‡∏Å‡πà‡∏≠‡∏ô‚Äù ‡∏î‡πà‡∏≤‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô ‚Üí ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß
			if (idx < GameProgress.CurrentLevelIndex)
			{
				script.SetDone(true);          // ‡∏ï‡∏±‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ß‡πà‡∏≤ ‚Äú‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß‚Äù
				script.SetActive(false);       // ‡∏õ‡∏¥‡∏î‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Å‡∏î‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏µ‡∏Å
				script.SelfModulate = new Color(1f, 0.4f, 0.4f);   // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏î‡∏á
			}
			// ‚ö™ ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏î‡πà‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö CurrentLevelIndex ‚Üí ‡∏î‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡πÄ‡∏•‡πà‡∏ô
			else if (idx == GameProgress.CurrentLevelIndex)
			{
				script.SetActive(true);        // ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏î‡πâ
				script.SetDone(false);         // ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏ú‡πà‡∏≤‡∏ô
				script.SelfModulate = new Color(1, 1, 1);           // ‡∏™‡∏µ‡∏õ‡∏Å‡∏ï‡∏¥ (‡∏Ç‡∏≤‡∏ß)
			}
			// ‚ö´ ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏∂‡∏á‡∏î‡πà‡∏≤‡∏ô‡∏ô‡∏µ‡πâ ‚Üí ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏¢‡∏±‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¢‡∏π‡πà
			else
			{
				script.SetDone(false);         // ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô
				script.SetActive(false);       // ‡∏¢‡∏±‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
				script.SelfModulate = new Color(0.6f, 0.6f, 0.6f);  // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ã‡∏µ‡∏î‡∏•‡∏á (‡∏™‡∏µ‡πÄ‡∏ó‡∏≤)
			}
		}
	}

	// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏î‡∏∂‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠ Node ‡πÄ‡∏ä‡πà‡∏ô "Level3" ‚Üí 3
	private int ExtractNumber(string name)
	{
		// ‡∏î‡∏∂‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠ Node ‡∏î‡πâ‡∏ß‡∏¢ LINQ (Where + char.IsDigit)
		string digits = new string(name.Where(char.IsDigit).ToArray());
		
		// ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏•‡∏¢ ‚Üí ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ 0, ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ ‚Üí ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô int ‡πÅ‡∏•‡πâ‡∏ß‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö
		return string.IsNullOrEmpty(digits) ? 0 : int.Parse(digits);
	}
	
	// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏ä‡πâ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πà‡∏≤‡∏ô (‡πÄ‡∏ä‡πà‡∏ô ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏•‡πà‡∏ô‡∏ú‡πà‡∏≤‡∏ô 1 ‡∏î‡πà‡∏≤‡∏ô)
	public void Refresh()
	{
		GameProgress.Load();     // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå save
		UpdateLevelVisual();     // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏´‡∏°‡πà (‡πÄ‡∏ä‡πà‡∏ô ‡∏î‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏Å‡∏•‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß)
	}
}
